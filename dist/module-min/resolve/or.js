import Resolver from"../resolver.js";import default_resolver from"./default.js";import{create_object,get_max_len}from"../common.js";import{union as _union}from"../intersect.js";Resolver.prototype.or=function(){const a=this;let b=arguments,c=b[0];if(c.then)return c.then(function(){return a.or.apply(a,b)});if(c[0]&&c[0].index)return this.or.apply(this,c);let d,e,f=[],g=[],h=0,j=0;for(let a,c=0;c<b.length;c++)if(a=b[c]){h=a.limit||0,j=a.offset||0,d=a.enrich,e=a.resolve;let b;if(a.constructor===Resolver)b=a.result;else if(a.constructor===Array)b=a;else if(a.index)a.resolve=!1,b=a.index.search(a).result;else if(a.and)b=this.and(a.and);else if(a.xor)b=this.xor(a.xor);else if(a.not)b=this.not(a.not);else continue;f[c]=b,b.then&&g.push(b)}return g.length?Promise.all(g).then(function(){return a.result.length&&(f=f.concat([a.result])),a.result=union(f,h,j,d,e,a.boostval),e?a.result:a}):(f.length&&(this.result.length&&(f=f.concat([this.result])),this.result=union(f,h,j,d,e,this.boostval)),e?this.result:this)};function union(a,b,c,d,e,f){return a.length?("object"==typeof b&&(c=b.offset||0,d=b.enrich||!1,b=b.limit||0),2>a.length?e?default_resolver(a[0],b,c,d):a[0]:_union(a,c,b,e,f)):a}