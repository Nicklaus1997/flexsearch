import Index from"./index.js";import Document from"./document.js";import{create_object,is_string}from"./common.js";function map_to_json(a){const b=[];for(const c of a.entries())b.push(c);return b}function ctx_to_json(a){const b=[];for(const c of a.entries())b.push(map_to_json(c));return b}function reg_to_json(a){const b=[];for(const c of a.keys())b.push(c);return b}function save(a,b,c,d,e,f){const g=a(b?b+"."+c:c,JSON.stringify(f));if(g&&g.then){const c=this;return g.then(function(){return c.export(a,b,d,e+1)})}return this.export(a,b,d,e+1)}export function exportIndex(a,b,c,d=0){let e,f;switch(d){case 0:e="reg",f=reg_to_json(this.reg);break;case 1:e="cfg",f={};break;case 2:e="map",f=map_to_json(this.map);break;case 3:e="ctx",f=ctx_to_json(this.ctx);break;default:return;}return save.call(this,a,b,e,c,d,f)}export function importIndex(a,b){if(b)switch(is_string(b)&&(b=JSON.parse(b)),a){case"cfg":break;case"reg":this.fastupdate=!1,this.reg=new Set(b);break;case"map":this.map=new Map(b);break;case"ctx":this.ctx=new Map(b);}}export function exportDocument(a,b,c=0,d=0){if(c<this.field.length){const b=this.field[c],e=this.index.get(b),f=e.export(a,b,c,d=1);if(f&&f.then){const e=this;return f.then(function(){return e.export(a,b,c+1,d=0)})}return this.export(a,b,c+1,d=0)}else{let e,f;switch(d){case 0:e="reg",f=reg_to_json(this.reg),b=null;break;case 1:e="tag",f=ctx_to_json(this.tag),b=null;break;case 2:e="doc",f=map_to_json(this.store),b=null;break;case 3:e="cfg",f={},b=null;break;default:return;}return save.call(this,a,b,e,c,d,f)}}export function importDocument(a,b){if(b)switch(is_string(b)&&(b=JSON.parse(b)),a){case"tag":this.tagindex=new Map(b);break;case"reg":this.fastupdate=!1,this.reg=new Set(b);for(let a,b=0;b<this.field.length;b++)a=this.index.get(this.field[b]),a.fastupdate=!1,a.reg=this.reg;break;case"doc":this.store=new Map(b);break;default:a=a.split(".");const c=a[0];a=a[1],c&&a&&this.index.get(c).import(a,b);}}export function serialize(a=!0){if(!this.reg.size)return"";let b="",c="";for(const d of this.reg.keys())c||(c=typeof d),b+=(b?",":"")+("string"==c?"\""+d+"\"":d);b="index.reg=new Set(["+b+"]);";let d="";for(const b of this.map.entries()){const a=b[0],e=b[1];let f="";for(let a,b=0;b<e.length;b++){a=e[b]||[""];let d="";for(let b=0;b<a.length;b++)d+=(d?",":"")+("string"==c?"\""+a[b]+"\"":a[b]);d="["+d+"]",f+=(f?",":"")+d}f="[\""+a+"\",["+f+"]]",d+=(d?",":"")+f}d="index.map=new Map(["+d+"]);";let e="";for(const b of this.ctx.entries()){const a=b[0],d=b[1];for(const b of d.entries()){const d=b[0],f=b[1];let g="";for(let a,b=0;b<f.length;b++){a=f[b]||[""];let d="";for(let b=0;b<a.length;b++)d+=(d?",":"")+("string"==c?"\""+a[b]+"\"":a[b]);d="["+d+"]",g+=(g?",":"")+d}g="new Map([[\""+d+"\",["+g+"]]])",g="[\""+a+"\","+g+"]",e+=(e?",":"")+g}}return e="index.ctx=new Map(["+e+"]);",a?"function inject(index){"+b+d+e+"}":b+d+e}